,Dataset,Time,Preprocessing,AutoML,Accuracy,F1,Shape,PipeLine
0,tumors_C,61.12m,AutoFeat,TPOT,0.9234567901234568,0.9333333333333333,"(60, 1)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.6888888888888889
exported_pipeline = LinearSVC(C=10.0, dual=True, loss=""hinge"", penalty=""l2"", tol=0.001)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
1,tumors_C,61.12m,None,TPOT,0.8833333333333333,0.8666666666666667,"(60, 7129)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.7555555555555555
exported_pipeline = LinearSVC(C=0.5, dual=False, loss=""squared_hinge"", penalty=""l1"", tol=1e-05)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
2,tumors_C,61.12m,TPOT,TPOT,0.5259259259259259,0.4666666666666667,"(60, 7129)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.7999999999999999
exported_pipeline = DecisionTreeClassifier(criterion=""entropy"", max_depth=7, min_samples_leaf=18, min_samples_split=15)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
