,Dataset,Time,Preprocessing,AutoML,Accuracy,F1,Shape,PipeLine
0,20_newsgroups,149.72m,AutoFeat,TPOT,0.9258805986144836,0.9501625243786568,"(399940, 1001)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.9499458252071145
exported_pipeline = MultinomialNB(alpha=0.01, fit_prior=True)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
1,20_newsgroups,149.72m,None,TPOT,0.9258805986144836,0.9501625243786568,"(399940, 1001)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.9499458252071145
exported_pipeline = GaussianNB()

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
2,20_newsgroups,149.72m,TPOT,TPOT,0.9258805986144836,0.9501625243786568,"(399940, 1001)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.9499458252071145
exported_pipeline = MultinomialNB(alpha=0.01, fit_prior=True)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
