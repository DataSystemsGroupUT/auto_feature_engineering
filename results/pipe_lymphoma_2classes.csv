,Dataset,Time,Preprocessing,AutoML,Accuracy,F1,Shape,PipeLine
0,lymphoma_2classes,60.93m,AutoFeat,TPOT,0.9172494172494172,0.9166666666666666,"(45, 9)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 1.0
exported_pipeline = KNeighborsClassifier(n_neighbors=3, p=2, weights=""distance"")

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
1,lymphoma_2classes,60.93m,None,TPOT,0.6666666666666666,0.6666666666666666,"(45, 4026)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 1.0
exported_pipeline = LinearSVC(C=0.5, dual=False, loss=""squared_hinge"", penalty=""l2"", tol=0.001)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
2,lymphoma_2classes,60.93m,TPOT,TPOT,0.6666666666666666,0.6666666666666666,"(45, 4026)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 1.0
exported_pipeline = LinearSVC(C=0.1, dual=True, loss=""squared_hinge"", penalty=""l2"", tol=0.001)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
