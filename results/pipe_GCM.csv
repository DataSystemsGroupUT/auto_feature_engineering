,Dataset,Time,Preprocessing,AutoML,Accuracy,F1,Shape,PipeLine
0,GCM,69.0m,AutoFeat,TPOT,0.3963714526214526,0.3958333333333333,"(190, 13)","import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.5071428571428572
exported_pipeline = RandomForestClassifier(bootstrap=True, criterion=""gini"", max_features=0.3, min_samples_leaf=2, min_samples_split=9, n_estimators=100)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
1,GCM,69.0m,None,TPOT,0.8299603174603174,0.8333333333333334,"(190, 16063)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.7098522167487685
exported_pipeline = LinearSVC(C=25.0, dual=True, loss=""hinge"", penalty=""l2"", tol=0.1)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
2,GCM,69.0m,TPOT,TPOT,0.8223214285714285,0.8333333333333334,"(190, 16063)","import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC

# NOTE: Make sure that the outcome column is labeled 'target' in the data file
tpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)
features = tpot_data.drop('target', axis=1)
training_features, testing_features, training_target, testing_target = \
            train_test_split(features, tpot_data['target'], random_state=None)

# Average CV score on the training set was: 0.73128078817734
exported_pipeline = LinearSVC(C=0.5, dual=False, loss=""squared_hinge"", penalty=""l1"", tol=0.001)

exported_pipeline.fit(training_features, training_target)
results = exported_pipeline.predict(testing_features)
"
